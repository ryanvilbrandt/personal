# http://adventofcode.com/2017/about

problem_1_input = \
    "892195969991735837915273868729548694237967495115412399373194562526947585337233793568278265279199883197167" + \
    "634791293177986152566236718332617536487236879747167999983363832257912445756887314879229925864477761357139" + \
    "855548522513798899853896612387146687716264599943289416326727256525173953861534244979466587895429399159924" + \
    "916364476319573895566795393368411672387263615582128377676293612892723762237191146714286233543514411813323" + \
    "197995953854871628225358543514157867372265718724276911699514971458844849349726276329135118243155698271218" + \
    "844347387457343656446381799296893222256198484465873714311777937421161581798189554141474236239447612421883" + \
    "232173914183732126332838194648583472419154369952477422666389517569944428464617457124369349242479612422673" + \
    "241361777576466946622932243728551273284837934497511114334421486262244982914734452113946361245377351849815" + \
    "584855691778894798219822463298387771923329337634394654439458564233259451453345316753241438267739439225497" + \
    "515276522424441532462541528195782818326918562247278496495764435386667383577543385186827269732261223156824" + \
    "351164841648424564925198783625721396988984481558391866483955533972212164693898955412719161648411279149413" + \
    "443192896864258215498543827458438871355879336892721675937111952479183496982825163456282747678364612135596" + \
    "373533447719867384667516572262124225585623974278833981365494628646614588114147473559138853453189448624976" + \
    "774641922469183942857695986376428944876851497914443873513862319484181787593572987444669767939526294424531" + \
    "262999564948571142342741129862311311313166798363442745792896227642881893134498151552326647933689596516859" + \
    "342242244584714818773791567187322217164347852843751875979415198165627534263527828414549217234322361937785" + \
    "185174993256753483876378332521824515977173397535784236923629636713469151526399149548322849831431526219478" + \
    "653861754364155275865511643923249858589466142474763778413826829226663398467569555747267195129525138917561" + \
    "785436449855933951538973995881954521124753369223898312843734771532342383282987422334196585128526526324291" + \
    "777689689492346231786335851551413876834969878"

def problem_1_a():
    def parse_digits(digits):
        """
        :param digits: str of digits
        :return:
        """
        total = 0
        for i, c in enumerate(digits):
            if int(digits[i]) == int(digits[(i + 1) % len(digits)]):
                total += int(c)
        return total

    print("1122", parse_digits("1122"))
    print("1111", parse_digits("1111"))
    print("1234", parse_digits("1234"))
    print("91212129", parse_digits("91212129"))
    print(parse_digits(problem_1_input))

def problem_1_b():
    def parse_digits(digits):
        """
        :param digits: str of digits
        :return:
        """
        total = 0
        len_digits = len(digits)
        for i, c in enumerate(digits):
            a = int(digits[i])
            b = int(digits[(i + len_digits // 2) % len_digits])
            if a == b:
                total += int(c)
        return total

    for digits in ["1212", "1221", "123425", "123123", "12131415", problem_1_input]:
        print(digits, parse_digits(digits))


problem_1_b()
